Setting up standalone version:
------------------------------
ssh to the chef server

Download chef development and install
# wget https://packages.chef.io/files/stable/chefdk/2.4.17/el/7/chefdk-2.4.17-1.el7.x86_64.rpm

Install chef
# sudo rpm -ivh chefdk-2.4.17-1.el7.x86_64.rpm

Run chef client in local mode
# sudo chef-client --local-mode

1. Create a file learn.rb
-------------------------

package 'httpd' do
  action :install
end

:install - install a package(the default if no action is defined)
:nothing - This action does nothing UNTIL it is notified by another resource to perform an action
:purge - Removes the configuration files as well as teh package(Only for Debian)
:reconfig - Reconfigure a package
:remove - Removes a package(also removes configuration files)
:upgrade - Install a package, if it is already installed, ensure it is latest version.

#checking the chef syntax
foodcritic learn.rb

#run chef locally
chef-client --local-mode learn.rb

2. Update Service on the same program
----------------------------------
vim learn.rb
  package 'httpd' do
  end
  
  service 'httpd' do 
    action [:enable, :start]
  end 
:wq

:disable - Disable a service so it does not start at startup
:enable - Enable a service to start at boot time
:nothing - Does nothing to the service
:reload - Reloads the service configuration
:start - Starts the service and keeps it running until stopped or disabled.
:restart - Restart a service
:stop - Stop a service

#checking the chef syntax
foodcritic learn.rb

#run chef locally
chef-client --local-mode learn.rb

3. Update file resource on the same program
-------------------------------------------
vim learn.rb

package 'httpd' do
end

service 'httpd' do
  action [:enable,:start]
end

file '/var/www/index.html' do
  action :remove
end

file 'var/www/html/index.html' do
  content 'Hello World! Pavan has written'
  mode '0755'
  owner 'root'
  group 'apache'
end

  
:wq!

#checking the chef syntax
foodcritic learn.rb

#run chef locally
chef-client --local-mode learn.rb

Chef Server Installation:
-------------------------
The Chef Server is the central location which acts as an artifact repository or "hub" that stores cookbooks, cookbook versions, facts about the node, data bags and metadata information about nodes.
All metadata of a node, when it is registered with Chef server, is stored on the Chef server.
The metadata is populated and sent to the server with chef-client, which is an application that runs on the node.
Configuration enforcement is not handled by Chef Server, instead the desired state configuration is enforced when chef-client runs and a "convergence" happens, allowing for easy scalability.

Demo:
build centos 7 VM through vagrant file

wget https://packages.chef.io/files/current/chef-server/12.17.33/el/7/chef-server-core-12.17.33-1.el7.x86_64.rpm

rpm -Uvh chef-server-12.17.33.-1.e17.x86_64.rpm

chef-server-ctl reconfigure

#Create administrator user to manage chef infrastructure.
chef-server-ctl user-create kumar pavan kumar savipavan@gmail.com 'Password' --filename kumar-rsa

#create organization:
chef-server-ctl org-create pavanaccademy 'Pavan Accademy. Inc' --association_user pavan --filename pavan-validator.pem

#Install chef GUI
chef-server-ctl install chef-manage

reconfigure and accept license agreement
chef-server-ctl reconfigure

GUI login:
https://ipaddress/login
